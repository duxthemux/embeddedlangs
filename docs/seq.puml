@startuml
'https://plantuml.com/sequence-diagram
skinparam backgroundColor #232323

skinparam sequence {
    ArrowColor white
    ArrowFontColor white
    LifeLineBorderColor white
}

skinparam actor {
    BackgroundColor white
    foregroundColor white
    FontColor white
    BorderColor #AAAAAA
}

skinparam control {
    BackgroundColor white
    foregroundColor white
    FontColor white
    BorderColor #AAAAAA

}

skinparam database {
    BackgroundColor white
    foregroundColor white
    FontColor white
    BorderColor #AAAAAA
}

autonumber
actor Usuario as user
control "Motor de Calculo" as microservice
database "Shared Store" as sharedstorage
control IAM as iam
control "GIT CLONE" as gitclone
database Git as git
gitclone -> gitclone : Baseado em Timer
gitclone   -> git: Git fetch
git -> gitclone: Obtem updates
gitclone -> sharedstorage : Persiste atualização
user -> microservice : Aciona api de cálculo
microservice -> iam : Verifica credenciais para cálculo
iam --> microservice: Autoriza cálculo
microservice -> sharedstorage : Carrega
sharedstorage --> microservice: Retorna fórmula atualizada
microservice -> microservice: Realiza cálculo com input
microservice -> microservice: Calcula hashes utilizando hash do microservico e da fórmula
microservice --> user: Devolve saida com input, output, hashes.

@enduml